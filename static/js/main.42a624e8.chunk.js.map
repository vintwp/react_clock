{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getTime","Date","toUTCString","slice","Clock","state","time","clockName","props","name","timerId","this","window","setInterval","setState","console","info","prevProps","changeStateClockName","clearInterval","debug","className","Component","App","hasClock","currentName","document","addEventListener","event","preventDefault","value","now","toString","getRandomName","ReactDOM","render","getElementById"],"mappings":"qMAEA,SAASA,IAGP,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAYjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,IACNO,UAAW,EAAKC,MAAMC,MAH1B,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMP,EAAON,IAEb,EAAKc,SAAS,CAAER,SAGhBS,QAAQC,KAAKV,KACZ,KACHK,KAAKG,SAAS,CAAEP,UAAWI,KAAKH,MAAMC,SAjB1C,gCAoBE,SAAmBQ,GACbA,EAAUR,OAASE,KAAKH,MAAMC,MAEhCE,KAAKO,yBAvBX,kCA4BE,WACEC,cAAcR,KAAKD,WA7BvB,kCAgCE,WACE,IAAMH,EAAYI,KAAKH,MAAMC,KAE7BE,KAAKG,UAAS,SAACT,EAAOG,GAMpB,OAJAO,QAAQK,MAAR,uBACkBf,EAAME,UADxB,eACwCC,EAAMC,OAGvC,CACLF,kBA1CR,oBA+CE,WACE,MAA4BI,KAAKN,MAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAEd,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,IAEF,YACD,sBAAMc,UAAU,cAAhB,SACGf,WAzDX,GAA2BgB,a,MCFpB,IAAMC,EAAb,4MACElB,MAAQ,CACNmB,UAAU,EACVjB,UAAW,WAHf,EAMEG,QAAU,EANZ,EAQEe,YAAc,GARhB,uDAUE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,WACjC,EAAKb,SAAS,CAAEU,UAAU,OAG5BE,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKf,SAAS,CAAEU,UAAU,OAG5Bb,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKY,YAhCX,WACE,IAAMK,EAAQ7B,KAAK8B,MAAMC,WAAW7B,OAAO,GAE3C,MAAM,SAAN,OAAgB2B,GA6BOG,GACnB,EAAKnB,SAAS,CAAEP,UAAW,EAAKkB,gBAC/B,QAvBP,oBA0BE,WACE,MAAgCd,KAAKN,MAA7BmB,EAAR,EAAQA,SAAUjB,EAAlB,EAAkBA,UAElB,OACE,sBAAKc,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOf,KAAMF,WAhClC,GAAyBe,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.42a624e8.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getTime(): string {\n  const time = new Date();\n\n  return time.toUTCString().slice(-12, -4);\n}\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: string;\n  clockName: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: getTime(),\n    clockName: this.props.name,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const time = getTime();\n\n      this.setState({ time });\n\n      // eslint-disable-next-line no-console\n      console.info(time);\n    }, 1000);\n    this.setState({ clockName: this.props.name });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // console.debug(`prevState - ${prevState.clockName}`);\n      this.changeStateClockName();\n      // eslint-disable-next-line no-console\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  changeStateClockName() {\n    const clockName = this.props.name;\n\n    this.setState((state, props) => {\n      // eslint-disable-next-line no-console\n      console.debug(\n        `Renamed from ${state.clockName} to ${props.name}`,\n      );\n\n      return {\n        clockName,\n      };\n    });\n  }\n\n  render() {\n    const { time, clockName } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component< {}, State > {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  currentName = '';\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.currentName = getRandomName();\n      this.setState({ clockName: this.currentName });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React Clock</h1>\n        {hasClock && <Clock name={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}